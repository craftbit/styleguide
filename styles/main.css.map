{"version":3,"sources":["../../bower_components/sass-mq/_mq.scss","main.scss","main.css","../../bower_components/normalize-scss/_normalize.scss","../_modules/link/link.scss","../_modules/colours/colours.scss","../../bower_components/susy/sass/susy/output/support/_clearfix.scss","../../bower_components/susy/sass/susy/output/support/_rem.scss","../../bower_components/susy/sass/susy/language/susy/_span.scss","../../bower_components/susy/sass/susy/output/shared/_direction.scss","../../bower_components/susy/sass/susy/language/susy/_gallery.scss","../../bower_components/susy/sass/susy/language/susy/_rows.scss","../../bower_components/susy/sass/susy/output/float/_end.scss","../_modules/typography/typography.scss","../../bower_components/susy/sass/susy/language/susy/_container.scss"],"names":[],"mappings":"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","file":"main.css","sourcesContent":["@charset \"UTF-8\"; // Fixes an issue where Ruby locale is not set properly\n                  // See https://github.com/sass-mq/sass-mq/pull/10\n\n/// Base font size on the `<body>` element\n/// @type Number (unit)\n$mq-base-font-size: 16px !default;\n\n/// Responsive mode\n///\n/// Set to `false` to enable support for browsers that do not support @media queries,\n/// (IE <= 8, Firefox <= 3, Opera <= 9)\n///\n/// You could create a stylesheet served exclusively to older browsers,\n/// where @media queries are rasterized\n///\n/// @example scss\n///  // old-ie.scss\n///  $mq-responsive: false;\n///  @import 'main'; // @media queries in this file will be rasterized up to $mq-static-breakpoint\n///                   // larger breakpoints will be ignored\n///\n/// @type Boolean\n/// @link https://github.com/sass-mq/sass-mq#responsive-mode-off Disabled responsive mode documentation\n$mq-responsive: true !default;\n\n/// Breakpoint list\n///\n/// Name your breakpoints in a way that creates a ubiquitous language\n/// across team members. It will improve communication between\n/// stakeholders, designers, developers, and testers.\n///\n/// @type Map\n/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint Full documentation and examples\n$mq-breakpoints: (\n    mobile:  320px,\n    tablet:  740px,\n    desktop: 980px,\n    wide:    1300px\n) !default;\n\n/// Static breakpoint (for fixed-width layouts)\n///\n/// Define the breakpoint from $mq-breakpoints that should\n/// be used as the target width for the fixed-width layout\n/// (i.e. when $mq-responsive is set to 'false') in a old-ie.scss\n///\n/// @example scss\n///  // tablet-only.scss\n///  //\n///  // Ignore all styles above tablet breakpoint,\n///  // and fix the styles (e.g. layout) at tablet width\n///  $mq-responsive: false;\n///  $mq-static-breakpoint: tablet;\n///  @import 'main'; // @media queries in this file will be rasterized up to tablet\n///                   // larger breakpoints will be ignored\n///\n/// @type String\n/// @link https://github.com/sass-mq/sass-mq#adding-custom-breakpoints Full documentation and examples\n$mq-static-breakpoint: desktop !default;\n\n/// Show breakpoints in the top right corner\n///\n/// If you want to display the currently active breakpoint in the top\n/// right corner of your site during development, add the breakpoints\n/// to this list, ordered by width, e.g. (mobile, tablet, desktop).\n///\n/// @type map\n$mq-show-breakpoints: () !default;\n\n/// Customize the media type (e.g. `@media screen` or `@media print`)\n/// By default sass-mq uses an \"all\" media type (`@media all and …`)\n///\n/// @type String\n/// @link https://github.com/sass-mq/sass-mq#changing-media-type Full documentation and examples\n$mq-media-type: all !default;\n\n/// Convert pixels to ems\n///\n/// @param {Number} $px - value to convert\n/// @param {Number} $base-font-size ($mq-base-font-size) - `<body>` font size\n///\n/// @example scss\n///  $font-size-in-ems: mq-px2em(16px);\n///  p { font-size: mq-px2em(16px); }\n///\n/// @requires $mq-base-font-size\n/// @returns {Number}\n@function mq-px2em($px, $base-font-size: $mq-base-font-size) {\n    @if unitless($px) {\n        @warn \"Assuming #{$px} to be in pixels, attempting to convert it into pixels.\";\n        @return mq-px2em($px * 1px, $base-font-size);\n    } @else if unit($px) == em {\n        @return $px;\n    }\n    @return ($px / $base-font-size) * 1em;\n}\n\n/// Get a breakpoint's width\n///\n/// @param {String} $name - Name of the breakpoint. One of $mq-breakpoints\n///\n/// @example scss\n///  $tablet-width: mq-get-breakpoint-width(tablet);\n///  @media (min-width: mq-get-breakpoint-width(desktop)) {}\n///\n/// @requires {Variable} $mq-breakpoints\n///\n/// @returns {Number} Value in pixels\n@function mq-get-breakpoint-width($name, $breakpoints: $mq-breakpoints) {\n    @if map-has-key($breakpoints, $name) {\n        @return map-get($breakpoints, $name);\n    } @else {\n        @warn \"Breakpoint #{$name} wasn't found in $breakpoints.\";\n    }\n}\n\n/// Media Query mixin\n///\n/// @param {String | Boolean} $from (false) - One of $mq-breakpoints\n/// @param {String | Boolean} $until (false) - One of $mq-breakpoints\n/// @param {String | Boolean} $and (false) - Additional media query parameters\n/// @param {String} $media-type ($mq-media-type) - Media type: screen, print…\n///\n/// @ignore Undocumented API, for advanced use only:\n/// @ignore @param {Map} $breakpoints ($mq-breakpoints)\n/// @ignore @param {String} $static-breakpoint ($mq-static-breakpoint)\n///\n/// @content styling rules, wrapped into a @media query when $responsive is true\n///\n/// @requires {Variable} $mq-media-type\n/// @requires {Variable} $mq-breakpoints\n/// @requires {Variable} $mq-static-breakpoint\n/// @requires {function} mq-px2em\n/// @requires {function} mq-get-breakpoint-width\n///\n/// @link https://github.com/sass-mq/sass-mq#responsive-mode-on-default Full documentation and examples\n///\n/// @example scss\n///  .element {\n///    @include mq($from: mobile) {\n///      color: red;\n///    }\n///    @include mq($until: tablet) {\n///      color: blue;\n///    }\n///    @include mq(mobile, tablet) {\n///      color: green;\n///    }\n///    @include mq($from: tablet, $and: '(orientation: landscape)') {\n///      color: teal;\n///    }\n///    @include mq(950px) {\n///      color: hotpink;\n///    }\n///    @include mq(tablet, $media-type: screen) {\n///      color: hotpink;\n///    }\n///    // Advanced use:\n///    $my-breakpoints: (L: 900px, XL: 1200px);\n///    @include mq(L, $breakpoints: $my-breakpoints, $static-breakpoint: L) {\n///      color: hotpink;\n///    }\n///  }\n@mixin mq(\n    $from: false,\n    $until: false,\n    $and: false,\n    $media-type: $mq-media-type,\n    $breakpoints: $mq-breakpoints,\n    $responsive: $mq-responsive,\n    $static-breakpoint: $mq-static-breakpoint\n) {\n    $min-width: 0;\n    $max-width: 0;\n    $media-query: '';\n\n    // From: this breakpoint (inclusive)\n    @if $from {\n        @if type-of($from) == number {\n            $min-width: mq-px2em($from);\n        } @else {\n            $min-width: mq-px2em(mq-get-breakpoint-width($from, $breakpoints));\n        }\n    }\n\n    // Until: that breakpoint (exclusive)\n    @if $until {\n        @if type-of($until) == number {\n            $max-width: mq-px2em($until);\n        } @else {\n            $max-width: mq-px2em(mq-get-breakpoint-width($until, $breakpoints)) - .01em;\n        }\n    }\n\n    // Responsive support is disabled, rasterize the output outside @media blocks\n    // The browser will rely on the cascade itself.\n    @if $responsive == false {\n        $static-breakpoint-width: mq-get-breakpoint-width($static-breakpoint, $breakpoints);\n        $target-width: mq-px2em($static-breakpoint-width);\n\n        // Output only rules that start at or span our target width\n        @if (\n            $and == false\n            and $min-width <= $target-width\n            and (\n                $until == false or $max-width >= $target-width\n            )\n        ) {\n            @content;\n        }\n    }\n\n    // Responsive support is enabled, output rules inside @media queries\n    @else {\n        @if $min-width != 0 { $media-query: '#{$media-query} and (min-width: #{$min-width})'; }\n        @if $max-width != 0 { $media-query: '#{$media-query} and (max-width: #{$max-width})'; }\n        @if $and            { $media-query: '#{$media-query} and #{$and}'; }\n\n        // Remove unnecessary media query prefix 'all and '\n        @if ($media-type == 'all' and $media-query != '') {\n            $media-type: '';\n            $media-query: str-slice(unquote($media-query), 6);\n        }\n\n        @media #{$media-type + $media-query} {\n            @content;\n        }\n    }\n}\n\n/// Add a breakpoint\n///\n/// @param {String} $name - Name of the breakpoint\n/// @param {Number} $width - Width of the breakpoint\n///\n/// @requires {Variable} $mq-breakpoints\n///\n/// @example scss\n///  @include mq-add-breakpoint(tvscreen, 1920px);\n///  @include mq(tvscreen) {}\n@mixin mq-add-breakpoint($name, $width) {\n    $new-breakpoint: ($name: $width);\n    $mq-breakpoints: map-merge($mq-breakpoints, $new-breakpoint) !global;\n}\n\n/// Show the active breakpoint in the top right corner of the viewport\n/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint\n///\n/// @param {List} $show-breakpoints ($mq-show-breakpoints) - List of breakpoints to show in the top right corner\n/// @param {Map} $breakpoints ($mq-breakpoints) - Breakpoint names and sizes\n///\n/// @requires {Variable} $mq-breakpoints\n/// @requires {Variable} $mq-show-breakpoints\n///\n/// @example scss\n///  // Show breakpoints using global settings\n///  @include mq-show-breakpoints;\n///\n///  // Show breakpoints using custom settings\n///  @include mq-show-breakpoints((L, XL), (S: 300px, L: 800px, XL: 1200px));\n@mixin mq-show-breakpoints($show-breakpoints: $mq-show-breakpoints, $breakpoints: $mq-breakpoints) {\n    body:before {\n        background-color: #FCF8E3;\n        border-bottom: 1px solid #FBEED5;\n        border-left: 1px solid #FBEED5;\n        color: #C09853;\n        font: small-caption;\n        padding: 3px 6px;\n        pointer-events: none;\n        position: fixed;\n        right: 0;\n        top: 0;\n        z-index: 100;\n\n        // Loop through the breakpoints that should be shown\n        @each $show-breakpoint in $show-breakpoints {\n            $width: mq-get-breakpoint-width($show-breakpoint, $breakpoints);\n            @include mq($show-breakpoint, $breakpoints: $breakpoints) {\n                content: \"#{$show-breakpoint} ≥ #{$width} (#{mq-px2em($width)})\";\n            }\n        }\n    }\n}\n\n@if length($mq-show-breakpoints) > 0 {\n    @include mq-show-breakpoints;\n}\n","// init\n$black: #333333;\n$white: #ffffff;\n$red: #ff5252;\n$green: #b3de62;\n$blue: #3b9bfb;\n$grey: #f3f3f3;\n\n$color-primary: #F5A623;\n$color-text: lighten($black, 3%);\n$color-background: $white;\n$color-accent: saturate($color-primary, 20%);\n\n$font-family-serif: 'Vollkorn', serif;\n$font-family-sans-serif: 'Open Sans', sans-serif;\n$line-height-base: 1.5em;\n$font-size-base: 1em;\n\n\n// import Google fonts\n@import url('http://fonts.googleapis.com/css?family=Vollkorn|Open+Sans:400italic,700italic,400,700');\n\n// Normalize Styles\n@import \"bower_components/normalize-scss/_normalize.scss\";\n\n$map: layout(auto 12 .25 inside fluid isolate);\n@import 'bower_components/susy/sass/susy';\n\n$mq-responsive: true;\n$mq-breakpoints: (\n    mobile:  24em,\n    tablet:  45em,\n    desktop: 60em,\n    wide:    67em\n);\n$mq-static-breakpoint: desktop;\n$mq-show-breakpoints: (mobile, tablet, desktop, wide);\n\n@import 'bower_components/sass-mq/mq';\n\n// Import Modules\n@import '../_modules/link/link';\n@import '../_modules/colours/colours';\n@import '../_modules/typography/typography';\n\n// Box sizing partial styles:\n// Apply a natural box layout model to all elements\n*,\n*:before,\n*:after {\n  -moz-box-sizing: border-box;\n  -webkit-box-sizing: border-box;\n  box-sizing: border-box;\n}\nbody {\n  color: $color-text;\n  font-size: $font-size-base;\n  font-family: $font-family-sans-serif;\n  line-height: $line-height-base;\n}\ncode {\n  background-color: $grey;\n  padding: 2px;\n  color: $color-text;\n}\n\n.container {\n  @include container(90%);\n}\n\n.example {\n  border-left: 5px solid darken($grey, 5%);\n  background-color: $grey;\n  margin: 0;\n  padding: 0.005em 0.5em;\n  border-radius: 2px;\n}\n\n.version {\n  font-size: 1em;\n  font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace;\n  position: fixed;\n  right: 10px;\n  bottom: 10px;\n}\n\nheader {\n  padding: 1em 0;\n\n  h1 {\n    margin: 0;\n  }\n\n  .logo {\n      font-size: 1em;\n\n    a {\n      text-decoration: none;\n      color: lighten($color-text, 25%);\n\n      &:hover {\n        color: $color-primary;\n      }\n    }\n  }\n}\n\nfooter,\nheader {\n  padding: 1em 0;\n  background-color: $grey;\n}\n","@charset \"UTF-8\";\n@import url(\"http://fonts.googleapis.com/css?family=Vollkorn|Open+Sans:400italic,700italic,400,700\");\n/* ==========================================================================\n   Normalize.scss settings\n   ========================================================================== */\n/**\n * Includes legacy browser support IE6/7\n *\n * Set to false if you want to drop support for IE6 and IE7\n */\n/* Base\n   ========================================================================== */\n/**\n * 1. Set default font family to sans-serif.\n * 2. Prevent iOS and IE text size adjust after device orientation change,\n *    without disabling user zoom.\n * 3. Corrects text resizing oddly in IE 6/7 when body `font-size` is set using\n *  `em` units.\n */\nhtml {\n  font-family: sans-serif;\n  /* 1 */\n  -ms-text-size-adjust: 100%;\n  /* 2 */\n  -webkit-text-size-adjust: 100%;\n  /* 2 */\n}\n\n/**\n * Remove default margin.\n */\nbody {\n  margin: 0;\n}\n\n/* HTML5 display definitions\n   ========================================================================== */\n/**\n * Correct `block` display not defined for any HTML5 element in IE 8/9.\n * Correct `block` display not defined for `details` or `summary` in IE 10/11\n * and Firefox.\n * Correct `block` display not defined for `main` in IE 11.\n */\narticle,\naside,\ndetails,\nfigcaption,\nfigure,\nfooter,\nheader,\nhgroup,\nmain,\nmenu,\nnav,\nsection,\nsummary {\n  display: block;\n}\n\n/**\n * 1. Correct `inline-block` display not defined in IE 6/7/8/9 and Firefox 3.\n * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.\n */\naudio,\ncanvas,\nprogress,\nvideo {\n  display: inline-block;\n  /* 1 */\n  vertical-align: baseline;\n  /* 2 */\n}\n\n/**\n * Prevents modern browsers from displaying `audio` without controls.\n * Remove excess height in iOS 5 devices.\n */\naudio:not([controls]) {\n  display: none;\n  height: 0;\n}\n\n/**\n * Address `[hidden]` styling not present in IE 8/9/10.\n * Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22.\n */\n[hidden],\ntemplate {\n  display: none;\n}\n\n/* Links\n   ========================================================================== */\n/**\n * Remove the gray background color from active links in IE 10.\n */\na {\n  background-color: transparent;\n}\n\n/**\n * Improve readability of focused elements when they are also in an\n * active/hover state.\n */\na:active, a:hover {\n  outline: 0;\n}\n\n/* Text-level semantics\n   ========================================================================== */\n/**\n * Address styling not present in IE 8/9/10/11, Safari, and Chrome.\n */\nabbr[title] {\n  border-bottom: 1px dotted;\n}\n\n/**\n * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.\n */\nb,\nstrong {\n  font-weight: bold;\n}\n\n/**\n * Address styling not present in Safari and Chrome.\n */\ndfn {\n  font-style: italic;\n}\n\n/**\n * Address variable `h1` font-size and margin within `section` and `article`\n * contexts in Firefox 4+, Safari, and Chrome.\n */\nh1 {\n  font-size: 2em;\n  margin: 0.67em 0;\n}\n\n/**\n * Addresses styling not present in IE 8/9.\n */\nmark {\n  background: #ff0;\n  color: #000;\n}\n\n/**\n * Address inconsistent and variable font size in all browsers.\n */\nsmall {\n  font-size: 80%;\n}\n\n/**\n * Prevent `sub` and `sup` affecting `line-height` in all browsers.\n */\nsub,\nsup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\n\nsup {\n  top: -0.5em;\n}\n\nsub {\n  bottom: -0.25em;\n}\n\n/* Embedded content\n   ========================================================================== */\n/**\n * 1. Remove border when inside `a` element in IE 8/9/10.\n * 2. Improves image quality when scaled in IE 7.\n */\nimg {\n  border: 0;\n}\n\n/**\n * Correct overflow not hidden in IE 9/10/11.\n */\nsvg:not(:root) {\n  overflow: hidden;\n}\n\n/* Grouping content\n   ========================================================================== */\n/**\n * Address margin not present in IE 8/9 and Safari.\n */\nfigure {\n  margin: 1em 40px;\n}\n\n/**\n * Address differences between Firefox and other browsers.\n */\nhr {\n  box-sizing: content-box;\n  height: 0;\n}\n\n/**\n * Contain overflow in all browsers.\n */\npre {\n  overflow: auto;\n}\n\n/**\n * Address odd `em`-unit font size rendering in all browsers.\n * Correct font family set oddly in IE 6, Safari 4/5, and Chrome.\n */\ncode,\nkbd,\npre,\nsamp {\n  font-family: monospace, monospace;\n  font-size: 1em;\n}\n\n/* Forms\n   ========================================================================== */\n/**\n * Known limitation: by default, Chrome and Safari on OS X allow very limited\n * styling of `select`, unless a `border` property is set.\n */\n/**\n * 1. Correct color not being inherited.\n *  Known issue: affects color of disabled elements.\n * 2. Correct font properties not being inherited.\n * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.\n * 4. Improves appearance and consistency in all browsers.\n */\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  color: inherit;\n  /* 1 */\n  font: inherit;\n  /* 2 */\n  margin: 0;\n  /* 3 */\n}\n\n/**\n * Address `overflow` set to `hidden` in IE 8/9/10/11.\n */\nbutton {\n  overflow: visible;\n}\n\n/**\n * Address inconsistent `text-transform` inheritance for `button` and `select`.\n * All other form control elements do not inherit `text-transform` values.\n * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.\n * Correct `select` style inheritance in Firefox.\n */\nbutton,\nselect {\n  text-transform: none;\n}\n\n/**\n * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`\n *  and `video` controls.\n * 2. Correct inability to style clickable `input` types in iOS.\n * 3. Improve usability and consistency of cursor style between image-type\n *  `input` and others.\n * 4. Removes inner spacing in IE 7 without affecting normal text inputs.\n *  Known issue: inner spacing remains in IE 6.\n */\nbutton,\nhtml input[type=\"button\"],\ninput[type=\"reset\"],\ninput[type=\"submit\"] {\n  -webkit-appearance: button;\n  /* 2 */\n  cursor: pointer;\n  /* 3 */\n}\n\n/**\n * Re-set default cursor for disabled elements.\n */\nbutton[disabled],\nhtml input[disabled] {\n  cursor: default;\n}\n\n/**\n * Remove inner padding and border in Firefox 4+.\n */\nbutton::-moz-focus-inner,\ninput::-moz-focus-inner {\n  border: 0;\n  padding: 0;\n}\n\n/**\n * Address Firefox 4+ setting `line-height` on `input` using `!important` in\n * the UA stylesheet.\n */\ninput {\n  line-height: normal;\n}\n\n/**\n * 1. Address box sizing set to `content-box` in IE 8/9/10.\n * 2. Remove excess padding in IE 8/9/10.\n *  Known issue: excess padding remains in IE 6.\n */\ninput[type=\"checkbox\"],\ninput[type=\"radio\"] {\n  box-sizing: border-box;\n  /* 1 */\n  padding: 0;\n  /* 2 */\n}\n\n/**\n * Fix the cursor style for Chrome's increment/decrement buttons. For certain\n * `font-size` values of the `input`, it causes the cursor style of the\n * decrement button to change from `default` to `text`.\n */\ninput[type=\"number\"]::-webkit-inner-spin-button,\ninput[type=\"number\"]::-webkit-outer-spin-button {\n  height: auto;\n}\n\n/**\n * 1. Address `appearance` set to `searchfield` in Safari and Chrome.\n * 2. Address `box-sizing` set to `border-box` in Safari and Chrome.\n */\ninput[type=\"search\"] {\n  -webkit-appearance: textfield;\n  /* 1 */\n  box-sizing: content-box;\n  /* 2 */\n}\n\n/**\n * Remove inner padding and search cancel button in Safari and Chrome on OS X.\n * Safari (but not Chrome) clips the cancel button when the search input has\n * padding (and `textfield` appearance).\n */\ninput[type=\"search\"]::-webkit-search-cancel-button,\ninput[type=\"search\"]::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\n/**\n * Define consistent border, margin, and padding.\n */\nfieldset {\n  border: 1px solid #c0c0c0;\n  margin: 0 2px;\n  padding: 0.35em 0.625em 0.75em;\n}\n\n/**\n * 1. Correct `color` not being inherited in IE 8/9/10/11.\n * 2. Remove padding so people aren't caught out if they zero out fieldsets.\n * 3. Corrects text not wrapping in Firefox 3.\n * 4. Corrects alignment displayed oddly in IE 6/7.\n */\nlegend {\n  border: 0;\n  /* 1 */\n  padding: 0;\n  /* 2 */\n}\n\n/**\n * Remove default vertical scrollbar in IE 8/9/10/11.\n */\ntextarea {\n  overflow: auto;\n}\n\n/**\n * Don't inherit the `font-weight` (applied by a rule above).\n * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.\n */\noptgroup {\n  font-weight: bold;\n}\n\n/* Tables\n   ========================================================================== */\n/**\n * Remove most spacing between table cells.\n */\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n\ntd,\nth {\n  padding: 0;\n}\n\nbody:before {\n  background-color: #FCF8E3;\n  border-bottom: 1px solid #FBEED5;\n  border-left: 1px solid #FBEED5;\n  color: #C09853;\n  font: small-caption;\n  padding: 3px 6px;\n  pointer-events: none;\n  position: fixed;\n  right: 0;\n  top: 0;\n  z-index: 100;\n}\n\n@media (min-width: 24em) {\n  body:before {\n    content: \"mobile ≥ 24em (24em)\";\n  }\n}\n\n@media (min-width: 45em) {\n  body:before {\n    content: \"tablet ≥ 45em (45em)\";\n  }\n}\n\n@media (min-width: 60em) {\n  body:before {\n    content: \"desktop ≥ 60em (60em)\";\n  }\n}\n\n@media (min-width: 67em) {\n  body:before {\n    content: \"wide ≥ 67em (67em)\";\n  }\n}\n\na:link, a:visited, a:active {\n  color: #3b3b3b;\n}\n\na:hover {\n  color: #F5A623;\n}\n\n.colours-brand .colour-type--primary, .colours-brand .colour-type--accent, .colours-brand .colour-type--body, .colours-brand .colour-type--background, .colours-standard .colour-type--white, .colours-standard .colour-type--black, .colours-standard .colour-type--grey, .colours-standard .colour-type--red, .colours-standard .colour-type--green, .colours-standard .colour-type--blue {\n  border-bottom: 12px solid rgba(0, 0, 0, 0.1);\n  height: 90px;\n}\n\n.colours-brand:after {\n  content: \" \";\n  display: block;\n  clear: both;\n}\n\n.colours-brand .var {\n  display: block;\n  text-align: center;\n}\n\n@media (min-width: 60em) {\n  .colours-brand .var {\n    margin: 0.5em;\n  }\n}\n\n.colours-brand .colour-type, .colours-brand .colour-type--primary, .colours-brand .colour-type--accent, .colours-brand .colour-type--body, .colours-brand .colour-type--background, .colours-brand .colours-standard .colour-type--white, .colours-standard .colours-brand .colour-type--white, .colours-brand .colours-standard .colour-type--black, .colours-standard .colours-brand .colour-type--black, .colours-brand .colours-standard .colour-type--grey, .colours-standard .colours-brand .colour-type--grey, .colours-brand .colours-standard .colour-type--red, .colours-standard .colours-brand .colour-type--red, .colours-brand .colours-standard .colour-type--green, .colours-standard .colours-brand .colour-type--green, .colours-brand .colours-standard .colour-type--blue, .colours-standard .colours-brand .colour-type--blue {\n  width: 48.7179487179%;\n  float: left;\n  margin-bottom: 1em;\n  position: relative;\n}\n\n.colours-brand .colour-type:nth-child(2n + 1), .colours-brand .colour-type--primary:nth-child(2n + 1), .colours-brand .colour-type--accent:nth-child(2n + 1), .colours-brand .colour-type--body:nth-child(2n + 1), .colours-brand .colour-type--background:nth-child(2n + 1), .colours-brand .colours-standard .colour-type--white:nth-child(2n + 1), .colours-standard .colours-brand .colour-type--white:nth-child(2n + 1), .colours-brand .colours-standard .colour-type--black:nth-child(2n + 1), .colours-standard .colours-brand .colour-type--black:nth-child(2n + 1), .colours-brand .colours-standard .colour-type--grey:nth-child(2n + 1), .colours-standard .colours-brand .colour-type--grey:nth-child(2n + 1), .colours-brand .colours-standard .colour-type--red:nth-child(2n + 1), .colours-standard .colours-brand .colour-type--red:nth-child(2n + 1), .colours-brand .colours-standard .colour-type--green:nth-child(2n + 1), .colours-standard .colours-brand .colour-type--green:nth-child(2n + 1), .colours-brand .colours-standard .colour-type--blue:nth-child(2n + 1), .colours-standard .colours-brand .colour-type--blue:nth-child(2n + 1) {\n  margin-left: 0;\n  margin-right: -100%;\n  clear: both;\n  margin-left: 0;\n}\n\n.colours-brand .colour-type:nth-child(2n + 2), .colours-brand .colour-type--primary:nth-child(2n + 2), .colours-brand .colour-type--accent:nth-child(2n + 2), .colours-brand .colour-type--body:nth-child(2n + 2), .colours-brand .colour-type--background:nth-child(2n + 2), .colours-brand .colours-standard .colour-type--white:nth-child(2n + 2), .colours-standard .colours-brand .colour-type--white:nth-child(2n + 2), .colours-brand .colours-standard .colour-type--black:nth-child(2n + 2), .colours-standard .colours-brand .colour-type--black:nth-child(2n + 2), .colours-brand .colours-standard .colour-type--grey:nth-child(2n + 2), .colours-standard .colours-brand .colour-type--grey:nth-child(2n + 2), .colours-brand .colours-standard .colour-type--red:nth-child(2n + 2), .colours-standard .colours-brand .colour-type--red:nth-child(2n + 2), .colours-brand .colours-standard .colour-type--green:nth-child(2n + 2), .colours-standard .colours-brand .colour-type--green:nth-child(2n + 2), .colours-brand .colours-standard .colour-type--blue:nth-child(2n + 2), .colours-standard .colours-brand .colour-type--blue:nth-child(2n + 2) {\n  margin-left: 51.2820512821%;\n  margin-right: -100%;\n  clear: none;\n}\n\n@media (min-width: 60em) {\n  .colours-brand .colour-type, .colours-brand .colour-type--primary, .colours-brand .colour-type--accent, .colours-brand .colour-type--body, .colours-brand .colour-type--background, .colours-brand .colours-standard .colour-type--white, .colours-standard .colours-brand .colour-type--white, .colours-brand .colours-standard .colour-type--black, .colours-standard .colours-brand .colour-type--black, .colours-brand .colours-standard .colour-type--grey, .colours-standard .colours-brand .colour-type--grey, .colours-brand .colours-standard .colour-type--red, .colours-standard .colours-brand .colour-type--red, .colours-brand .colours-standard .colour-type--green, .colours-standard .colours-brand .colour-type--green, .colours-brand .colours-standard .colour-type--blue, .colours-standard .colours-brand .colour-type--blue {\n    width: 23.7288135593%;\n    float: left;\n  }\n  .colours-brand .colour-type:nth-child(4n + 1), .colours-brand .colour-type--primary:nth-child(4n + 1), .colours-brand .colour-type--accent:nth-child(4n + 1), .colours-brand .colour-type--body:nth-child(4n + 1), .colours-brand .colour-type--background:nth-child(4n + 1), .colours-brand .colours-standard .colour-type--white:nth-child(4n + 1), .colours-standard .colours-brand .colour-type--white:nth-child(4n + 1), .colours-brand .colours-standard .colour-type--black:nth-child(4n + 1), .colours-standard .colours-brand .colour-type--black:nth-child(4n + 1), .colours-brand .colours-standard .colour-type--grey:nth-child(4n + 1), .colours-standard .colours-brand .colour-type--grey:nth-child(4n + 1), .colours-brand .colours-standard .colour-type--red:nth-child(4n + 1), .colours-standard .colours-brand .colour-type--red:nth-child(4n + 1), .colours-brand .colours-standard .colour-type--green:nth-child(4n + 1), .colours-standard .colours-brand .colour-type--green:nth-child(4n + 1), .colours-brand .colours-standard .colour-type--blue:nth-child(4n + 1), .colours-standard .colours-brand .colour-type--blue:nth-child(4n + 1) {\n    margin-left: 0;\n    margin-right: -100%;\n    clear: both;\n    margin-left: 0;\n  }\n  .colours-brand .colour-type:nth-child(4n + 2), .colours-brand .colour-type--primary:nth-child(4n + 2), .colours-brand .colour-type--accent:nth-child(4n + 2), .colours-brand .colour-type--body:nth-child(4n + 2), .colours-brand .colour-type--background:nth-child(4n + 2), .colours-brand .colours-standard .colour-type--white:nth-child(4n + 2), .colours-standard .colours-brand .colour-type--white:nth-child(4n + 2), .colours-brand .colours-standard .colour-type--black:nth-child(4n + 2), .colours-standard .colours-brand .colour-type--black:nth-child(4n + 2), .colours-brand .colours-standard .colour-type--grey:nth-child(4n + 2), .colours-standard .colours-brand .colour-type--grey:nth-child(4n + 2), .colours-brand .colours-standard .colour-type--red:nth-child(4n + 2), .colours-standard .colours-brand .colour-type--red:nth-child(4n + 2), .colours-brand .colours-standard .colour-type--green:nth-child(4n + 2), .colours-standard .colours-brand .colour-type--green:nth-child(4n + 2), .colours-brand .colours-standard .colour-type--blue:nth-child(4n + 2), .colours-standard .colours-brand .colour-type--blue:nth-child(4n + 2) {\n    margin-left: 25.4237288136%;\n    margin-right: -100%;\n    clear: none;\n  }\n  .colours-brand .colour-type:nth-child(4n + 3), .colours-brand .colour-type--primary:nth-child(4n + 3), .colours-brand .colour-type--accent:nth-child(4n + 3), .colours-brand .colour-type--body:nth-child(4n + 3), .colours-brand .colour-type--background:nth-child(4n + 3), .colours-brand .colours-standard .colour-type--white:nth-child(4n + 3), .colours-standard .colours-brand .colour-type--white:nth-child(4n + 3), .colours-brand .colours-standard .colour-type--black:nth-child(4n + 3), .colours-standard .colours-brand .colour-type--black:nth-child(4n + 3), .colours-brand .colours-standard .colour-type--grey:nth-child(4n + 3), .colours-standard .colours-brand .colour-type--grey:nth-child(4n + 3), .colours-brand .colours-standard .colour-type--red:nth-child(4n + 3), .colours-standard .colours-brand .colour-type--red:nth-child(4n + 3), .colours-brand .colours-standard .colour-type--green:nth-child(4n + 3), .colours-standard .colours-brand .colour-type--green:nth-child(4n + 3), .colours-brand .colours-standard .colour-type--blue:nth-child(4n + 3), .colours-standard .colours-brand .colour-type--blue:nth-child(4n + 3) {\n    margin-left: 50.8474576271%;\n    margin-right: -100%;\n    clear: none;\n  }\n  .colours-brand .colour-type:nth-child(4n + 4), .colours-brand .colour-type--primary:nth-child(4n + 4), .colours-brand .colour-type--accent:nth-child(4n + 4), .colours-brand .colour-type--body:nth-child(4n + 4), .colours-brand .colour-type--background:nth-child(4n + 4), .colours-brand .colours-standard .colour-type--white:nth-child(4n + 4), .colours-standard .colours-brand .colour-type--white:nth-child(4n + 4), .colours-brand .colours-standard .colour-type--black:nth-child(4n + 4), .colours-standard .colours-brand .colour-type--black:nth-child(4n + 4), .colours-brand .colours-standard .colour-type--grey:nth-child(4n + 4), .colours-standard .colours-brand .colour-type--grey:nth-child(4n + 4), .colours-brand .colours-standard .colour-type--red:nth-child(4n + 4), .colours-standard .colours-brand .colour-type--red:nth-child(4n + 4), .colours-brand .colours-standard .colour-type--green:nth-child(4n + 4), .colours-standard .colours-brand .colour-type--green:nth-child(4n + 4), .colours-brand .colours-standard .colour-type--blue:nth-child(4n + 4), .colours-standard .colours-brand .colour-type--blue:nth-child(4n + 4) {\n    margin-left: 76.2711864407%;\n    margin-right: -100%;\n    clear: none;\n  }\n}\n\n.colours-brand .colour-type:after, .colours-brand .colour-type--primary:after, .colours-brand .colour-type--accent:after, .colours-brand .colour-type--body:after, .colours-brand .colour-type--background:after, .colours-brand .colours-standard .colour-type--white:after, .colours-standard .colours-brand .colour-type--white:after, .colours-brand .colours-standard .colour-type--black:after, .colours-standard .colours-brand .colour-type--black:after, .colours-brand .colours-standard .colour-type--grey:after, .colours-standard .colours-brand .colour-type--grey:after, .colours-brand .colours-standard .colour-type--red:after, .colours-standard .colours-brand .colour-type--red:after, .colours-brand .colours-standard .colour-type--green:after, .colours-standard .colours-brand .colour-type--green:after, .colours-brand .colours-standard .colour-type--blue:after, .colours-standard .colours-brand .colour-type--blue:after {\n  position: absolute;\n  bottom: 0%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  color: rgba(0, 0, 0, 0.5);\n}\n\n.colours-brand .colour-type--primary {\n  background-color: #F5A623;\n}\n\n.colours-brand .colour-type--primary:after {\n  content: \"#F5A623\";\n}\n\n.colours-brand .colour-type--accent {\n  background-color: #ffa819;\n}\n\n.colours-brand .colour-type--accent:after {\n  content: \"#ffa819\";\n}\n\n.colours-brand .colour-type--body {\n  background-color: #3b3b3b;\n  color: #ffffff;\n}\n\n.colours-brand .colour-type--body:after {\n  content: \"#3b3b3b\";\n  color: #ffffff;\n}\n\n.colours-brand .colour-type--background {\n  background-color: #ffffff;\n}\n\n.colours-brand .colour-type--background:after {\n  content: \"#ffffff\";\n}\n\n.colours-standard:after {\n  content: \" \";\n  display: block;\n  clear: both;\n}\n\n.colours-standard .var {\n  display: block;\n  text-align: center;\n}\n\n@media (min-width: 60em) {\n  .colours-standard .var {\n    margin: 0.5em;\n  }\n}\n\n.colours-standard .colour-type, .colours-standard .colours-brand .colour-type--primary, .colours-brand .colours-standard .colour-type--primary, .colours-standard .colours-brand .colour-type--accent, .colours-brand .colours-standard .colour-type--accent, .colours-standard .colours-brand .colour-type--body, .colours-brand .colours-standard .colour-type--body, .colours-standard .colours-brand .colour-type--background, .colours-brand .colours-standard .colour-type--background, .colours-standard .colour-type--white, .colours-standard .colour-type--black, .colours-standard .colour-type--grey, .colours-standard .colour-type--red, .colours-standard .colour-type--green, .colours-standard .colour-type--blue {\n  width: 48.7179487179%;\n  float: left;\n  margin-bottom: 1em;\n  position: relative;\n}\n\n.colours-standard .colour-type:nth-child(2n + 1), .colours-standard .colours-brand .colour-type--primary:nth-child(2n + 1), .colours-brand .colours-standard .colour-type--primary:nth-child(2n + 1), .colours-standard .colours-brand .colour-type--accent:nth-child(2n + 1), .colours-brand .colours-standard .colour-type--accent:nth-child(2n + 1), .colours-standard .colours-brand .colour-type--body:nth-child(2n + 1), .colours-brand .colours-standard .colour-type--body:nth-child(2n + 1), .colours-standard .colours-brand .colour-type--background:nth-child(2n + 1), .colours-brand .colours-standard .colour-type--background:nth-child(2n + 1), .colours-standard .colour-type--white:nth-child(2n + 1), .colours-standard .colour-type--black:nth-child(2n + 1), .colours-standard .colour-type--grey:nth-child(2n + 1), .colours-standard .colour-type--red:nth-child(2n + 1), .colours-standard .colour-type--green:nth-child(2n + 1), .colours-standard .colour-type--blue:nth-child(2n + 1) {\n  margin-left: 0;\n  margin-right: -100%;\n  clear: both;\n  margin-left: 0;\n}\n\n.colours-standard .colour-type:nth-child(2n + 2), .colours-standard .colours-brand .colour-type--primary:nth-child(2n + 2), .colours-brand .colours-standard .colour-type--primary:nth-child(2n + 2), .colours-standard .colours-brand .colour-type--accent:nth-child(2n + 2), .colours-brand .colours-standard .colour-type--accent:nth-child(2n + 2), .colours-standard .colours-brand .colour-type--body:nth-child(2n + 2), .colours-brand .colours-standard .colour-type--body:nth-child(2n + 2), .colours-standard .colours-brand .colour-type--background:nth-child(2n + 2), .colours-brand .colours-standard .colour-type--background:nth-child(2n + 2), .colours-standard .colour-type--white:nth-child(2n + 2), .colours-standard .colour-type--black:nth-child(2n + 2), .colours-standard .colour-type--grey:nth-child(2n + 2), .colours-standard .colour-type--red:nth-child(2n + 2), .colours-standard .colour-type--green:nth-child(2n + 2), .colours-standard .colour-type--blue:nth-child(2n + 2) {\n  margin-left: 51.2820512821%;\n  margin-right: -100%;\n  clear: none;\n}\n\n@media (min-width: 60em) {\n  .colours-standard .colour-type, .colours-standard .colours-brand .colour-type--primary, .colours-brand .colours-standard .colour-type--primary, .colours-standard .colours-brand .colour-type--accent, .colours-brand .colours-standard .colour-type--accent, .colours-standard .colours-brand .colour-type--body, .colours-brand .colours-standard .colour-type--body, .colours-standard .colours-brand .colour-type--background, .colours-brand .colours-standard .colour-type--background, .colours-standard .colour-type--white, .colours-standard .colour-type--black, .colours-standard .colour-type--grey, .colours-standard .colour-type--red, .colours-standard .colour-type--green, .colours-standard .colour-type--blue {\n    width: 32.2033898305%;\n    float: left;\n  }\n  .colours-standard .colour-type:nth-child(3n + 1), .colours-standard .colours-brand .colour-type--primary:nth-child(3n + 1), .colours-brand .colours-standard .colour-type--primary:nth-child(3n + 1), .colours-standard .colours-brand .colour-type--accent:nth-child(3n + 1), .colours-brand .colours-standard .colour-type--accent:nth-child(3n + 1), .colours-standard .colours-brand .colour-type--body:nth-child(3n + 1), .colours-brand .colours-standard .colour-type--body:nth-child(3n + 1), .colours-standard .colours-brand .colour-type--background:nth-child(3n + 1), .colours-brand .colours-standard .colour-type--background:nth-child(3n + 1), .colours-standard .colour-type--white:nth-child(3n + 1), .colours-standard .colour-type--black:nth-child(3n + 1), .colours-standard .colour-type--grey:nth-child(3n + 1), .colours-standard .colour-type--red:nth-child(3n + 1), .colours-standard .colour-type--green:nth-child(3n + 1), .colours-standard .colour-type--blue:nth-child(3n + 1) {\n    margin-left: 0;\n    margin-right: -100%;\n    clear: both;\n    margin-left: 0;\n  }\n  .colours-standard .colour-type:nth-child(3n + 2), .colours-standard .colours-brand .colour-type--primary:nth-child(3n + 2), .colours-brand .colours-standard .colour-type--primary:nth-child(3n + 2), .colours-standard .colours-brand .colour-type--accent:nth-child(3n + 2), .colours-brand .colours-standard .colour-type--accent:nth-child(3n + 2), .colours-standard .colours-brand .colour-type--body:nth-child(3n + 2), .colours-brand .colours-standard .colour-type--body:nth-child(3n + 2), .colours-standard .colours-brand .colour-type--background:nth-child(3n + 2), .colours-brand .colours-standard .colour-type--background:nth-child(3n + 2), .colours-standard .colour-type--white:nth-child(3n + 2), .colours-standard .colour-type--black:nth-child(3n + 2), .colours-standard .colour-type--grey:nth-child(3n + 2), .colours-standard .colour-type--red:nth-child(3n + 2), .colours-standard .colour-type--green:nth-child(3n + 2), .colours-standard .colour-type--blue:nth-child(3n + 2) {\n    margin-left: 33.8983050847%;\n    margin-right: -100%;\n    clear: none;\n  }\n  .colours-standard .colour-type:nth-child(3n + 3), .colours-standard .colours-brand .colour-type--primary:nth-child(3n + 3), .colours-brand .colours-standard .colour-type--primary:nth-child(3n + 3), .colours-standard .colours-brand .colour-type--accent:nth-child(3n + 3), .colours-brand .colours-standard .colour-type--accent:nth-child(3n + 3), .colours-standard .colours-brand .colour-type--body:nth-child(3n + 3), .colours-brand .colours-standard .colour-type--body:nth-child(3n + 3), .colours-standard .colours-brand .colour-type--background:nth-child(3n + 3), .colours-brand .colours-standard .colour-type--background:nth-child(3n + 3), .colours-standard .colour-type--white:nth-child(3n + 3), .colours-standard .colour-type--black:nth-child(3n + 3), .colours-standard .colour-type--grey:nth-child(3n + 3), .colours-standard .colour-type--red:nth-child(3n + 3), .colours-standard .colour-type--green:nth-child(3n + 3), .colours-standard .colour-type--blue:nth-child(3n + 3) {\n    margin-left: 67.7966101695%;\n    margin-right: -100%;\n    clear: none;\n  }\n}\n\n.colours-standard .colour-type:after, .colours-standard .colours-brand .colour-type--primary:after, .colours-brand .colours-standard .colour-type--primary:after, .colours-standard .colours-brand .colour-type--accent:after, .colours-brand .colours-standard .colour-type--accent:after, .colours-standard .colours-brand .colour-type--body:after, .colours-brand .colours-standard .colour-type--body:after, .colours-standard .colours-brand .colour-type--background:after, .colours-brand .colours-standard .colour-type--background:after, .colours-standard .colour-type--white:after, .colours-standard .colour-type--black:after, .colours-standard .colour-type--grey:after, .colours-standard .colour-type--red:after, .colours-standard .colour-type--green:after, .colours-standard .colour-type--blue:after {\n  position: absolute;\n  bottom: 0%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  color: rgba(0, 0, 0, 0.5);\n}\n\n.colours-standard .colour-type--white {\n  background-color: #ffffff;\n}\n\n.colours-standard .colour-type--white:after {\n  content: \"#ffffff\";\n}\n\n.colours-standard .colour-type--black {\n  background-color: #333333;\n  color: #ffffff;\n}\n\n.colours-standard .colour-type--black:after {\n  content: \"#333333\";\n  color: #ffffff;\n}\n\n.colours-standard .colour-type--grey {\n  background-color: #f3f3f3;\n}\n\n.colours-standard .colour-type--grey:after {\n  content: \"#f3f3f3\";\n}\n\n.colours-standard .colour-type--red {\n  background-color: #ff5252;\n}\n\n.colours-standard .colour-type--red:after {\n  content: \"#ff5252\";\n}\n\n.colours-standard .colour-type--green {\n  background-color: #b3de62;\n}\n\n.colours-standard .colour-type--green:after {\n  content: \"#b3de62\";\n}\n\n.colours-standard .colour-type--blue {\n  background-color: #3b9bfb;\n}\n\n.colours-standard .colour-type--blue:after {\n  content: \"#3b9bfb\";\n}\n\n.typography .serif {\n  font-family: \"Vollkorn\", serif;\n}\n\n.typography .sans-serif {\n  font-family: \"Open Sans\", sans-serif;\n}\n\n*,\n*:before,\n*:after {\n  -moz-box-sizing: border-box;\n  -webkit-box-sizing: border-box;\n  box-sizing: border-box;\n}\n\nbody {\n  color: #3b3b3b;\n  font-size: 1em;\n  font-family: \"Open Sans\", sans-serif;\n  line-height: 1.5em;\n}\n\ncode {\n  background-color: #f3f3f3;\n  padding: 2px;\n  color: #3b3b3b;\n}\n\n.container {\n  max-width: 90%;\n  margin-left: auto;\n  margin-right: auto;\n}\n\n.container:after {\n  content: \" \";\n  display: block;\n  clear: both;\n}\n\n.example {\n  border-left: 5px solid #e6e6e6;\n  background-color: #f3f3f3;\n  margin: 0;\n  padding: 0.005em 0.5em;\n  border-radius: 2px;\n}\n\n.version {\n  font-size: 1em;\n  font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace;\n  position: fixed;\n  right: 10px;\n  bottom: 10px;\n}\n\nheader {\n  padding: 1em 0;\n}\n\nheader h1 {\n  margin: 0;\n}\n\nheader .logo {\n  font-size: 1em;\n}\n\nheader .logo a {\n  text-decoration: none;\n  color: #7a7a7a;\n}\n\nheader .logo a:hover {\n  color: #F5A623;\n}\n\nfooter,\nheader {\n  padding: 1em 0;\n  background-color: #f3f3f3;\n}\n","/* ==========================================================================\n   Normalize.scss settings\n   ========================================================================== */\n/**\n * Includes legacy browser support IE6/7\n *\n * Set to false if you want to drop support for IE6 and IE7\n */\n\n$legacy_browser_support: false !default;\n\n/* Base\n   ========================================================================== */\n\n/**\n * 1. Set default font family to sans-serif.\n * 2. Prevent iOS and IE text size adjust after device orientation change,\n *    without disabling user zoom.\n * 3. Corrects text resizing oddly in IE 6/7 when body `font-size` is set using\n *  `em` units.\n */\n\nhtml {\n  font-family: sans-serif; /* 1 */\n  -ms-text-size-adjust: 100%; /* 2 */\n  -webkit-text-size-adjust: 100%; /* 2 */\n  @if $legacy_browser_support {\n    *font-size: 100%; /* 3 */\n  }\n}\n\n/**\n * Remove default margin.\n */\n\nbody {\n  margin: 0;\n}\n\n/* HTML5 display definitions\n   ========================================================================== */\n\n/**\n * Correct `block` display not defined for any HTML5 element in IE 8/9.\n * Correct `block` display not defined for `details` or `summary` in IE 10/11\n * and Firefox.\n * Correct `block` display not defined for `main` in IE 11.\n */\n\narticle,\naside,\ndetails,\nfigcaption,\nfigure,\nfooter,\nheader,\nhgroup,\nmain,\nmenu,\nnav,\nsection,\nsummary {\n  display: block;\n}\n\n/**\n * 1. Correct `inline-block` display not defined in IE 6/7/8/9 and Firefox 3.\n * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.\n */\n\naudio,\ncanvas,\nprogress,\nvideo {\n  display: inline-block; /* 1 */\n  vertical-align: baseline; /* 2 */\n  @if $legacy_browser_support {\n    *display: inline;\n    *zoom: 1;\n  }\n}\n\n/**\n * Prevents modern browsers from displaying `audio` without controls.\n * Remove excess height in iOS 5 devices.\n */\n\naudio:not([controls]) {\n  display: none;\n  height: 0;\n}\n\n/**\n * Address `[hidden]` styling not present in IE 8/9/10.\n * Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22.\n */\n\n[hidden],\ntemplate {\n  display: none;\n}\n\n/* Links\n   ========================================================================== */\n\n/**\n * Remove the gray background color from active links in IE 10.\n */\n\na {\n  background-color: transparent;\n}\n\n/**\n * Improve readability of focused elements when they are also in an\n * active/hover state.\n */\n\na {\n  &:active, &:hover {\n    outline: 0;\n  };\n}\n\n/* Text-level semantics\n   ========================================================================== */\n\n/**\n * Address styling not present in IE 8/9/10/11, Safari, and Chrome.\n */\n\nabbr[title] {\n  border-bottom: 1px dotted;\n}\n\n/**\n * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.\n */\n\nb,\nstrong {\n  font-weight: bold;\n}\n\n@if $legacy_browser_support {\n  blockquote {\n    margin: 1em 40px;\n  }\n}\n\n/**\n * Address styling not present in Safari and Chrome.\n */\n\ndfn {\n  font-style: italic;\n}\n\n/**\n * Address variable `h1` font-size and margin within `section` and `article`\n * contexts in Firefox 4+, Safari, and Chrome.\n */\n\nh1 {\n  font-size: 2em;\n  margin: 0.67em 0;\n}\n\n@if $legacy_browser_support {\n  h2 {\n    font-size: 1.5em;\n    margin: 0.83em 0;\n  }\n\n  h3 {\n    font-size: 1.17em;\n    margin: 1em 0;\n  }\n\n  h4 {\n    font-size: 1em;\n    margin: 1.33em 0;\n  }\n\n  h5 {\n    font-size: 0.83em;\n    margin: 1.67em 0;\n  }\n\n  h6 {\n    font-size: 0.67em;\n    margin: 2.33em 0;\n  }\n}\n\n/**\n * Addresses styling not present in IE 8/9.\n */\n\nmark {\n  background: #ff0;\n  color: #000;\n}\n\n@if $legacy_browser_support {\n\n  /**\n   * Addresses margins set differently in IE 6/7.\n   */\n\n  p,\n  pre {\n    *margin: 1em 0;\n  }\n\n  /*\n   * Addresses CSS quotes not supported in IE 6/7.\n   */\n\n  q {\n    *quotes: none;\n  }\n\n  /*\n   * Addresses `quotes` property not supported in Safari 4.\n   */\n\n  q:before,\n  q:after {\n    content: '';\n    content: none;\n  }\n}\n\n/**\n * Address inconsistent and variable font size in all browsers.\n */\n\nsmall {\n  font-size: 80%;\n}\n\n/**\n * Prevent `sub` and `sup` affecting `line-height` in all browsers.\n */\n\nsub,\nsup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\n\nsup {\n  top: -0.5em;\n}\n\nsub {\n  bottom: -0.25em;\n}\n\n@if $legacy_browser_support {\n\n  /* ==========================================================================\n     Lists\n     ========================================================================== */\n\n  /*\n   * Addresses margins set differently in IE 6/7.\n   */\n\n  dl,\n  menu,\n  ol,\n  ul {\n    *margin: 1em 0;\n  }\n\n  dd {\n    *margin: 0 0 0 40px;\n  }\n\n  /*\n   * Addresses paddings set differently in IE 6/7.\n   */\n\n  menu,\n  ol,\n  ul {\n    *padding: 0 0 0 40px;\n  }\n\n  /*\n   * Corrects list images handled incorrectly in IE 7.\n   */\n\n  nav ul,\n  nav ol {\n    *list-style: none;\n    *list-style-image: none;\n  }\n\n}\n\n/* Embedded content\n   ========================================================================== */\n\n/**\n * 1. Remove border when inside `a` element in IE 8/9/10.\n * 2. Improves image quality when scaled in IE 7.\n */\n\nimg {\n  border: 0;\n  @if $legacy_browser_support {\n    *-ms-interpolation-mode: bicubic; /* 2 */\n  }\n}\n\n/**\n * Correct overflow not hidden in IE 9/10/11.\n */\n\nsvg:not(:root) {\n  overflow: hidden;\n}\n\n/* Grouping content\n   ========================================================================== */\n\n/**\n * Address margin not present in IE 8/9 and Safari.\n */\n\nfigure {\n  margin: 1em 40px;\n}\n\n/**\n * Address differences between Firefox and other browsers.\n */\n\nhr {\n  box-sizing: content-box;\n  height: 0;\n}\n\n/**\n * Contain overflow in all browsers.\n */\n\npre {\n  overflow: auto;\n}\n\n/**\n * Address odd `em`-unit font size rendering in all browsers.\n * Correct font family set oddly in IE 6, Safari 4/5, and Chrome.\n */\n\ncode,\nkbd,\npre,\nsamp {\n  font-family: monospace, monospace;\n  @if $legacy_browser_support {\n    _font-family: 'courier new', monospace;\n  }\n  font-size: 1em;\n}\n\n/* Forms\n   ========================================================================== */\n\n/**\n * Known limitation: by default, Chrome and Safari on OS X allow very limited\n * styling of `select`, unless a `border` property is set.\n */\n\n/**\n * 1. Correct color not being inherited.\n *  Known issue: affects color of disabled elements.\n * 2. Correct font properties not being inherited.\n * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.\n * 4. Improves appearance and consistency in all browsers.\n */\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  color: inherit; /* 1 */\n  font: inherit; /* 2 */\n  margin: 0; /* 3 */\n  @if $legacy_browser_support {\n    vertical-align: baseline; /* 3 */\n    *vertical-align: middle; /* 3 */\n  }\n}\n\n/**\n * Address `overflow` set to `hidden` in IE 8/9/10/11.\n */\n\nbutton {\n  overflow: visible;\n}\n\n/**\n * Address inconsistent `text-transform` inheritance for `button` and `select`.\n * All other form control elements do not inherit `text-transform` values.\n * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.\n * Correct `select` style inheritance in Firefox.\n */\n\nbutton,\nselect {\n  text-transform: none;\n}\n\n/**\n * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`\n *  and `video` controls.\n * 2. Correct inability to style clickable `input` types in iOS.\n * 3. Improve usability and consistency of cursor style between image-type\n *  `input` and others.\n * 4. Removes inner spacing in IE 7 without affecting normal text inputs.\n *  Known issue: inner spacing remains in IE 6.\n */\n\nbutton,\nhtml input[type=\"button\"], /* 1 */\ninput[type=\"reset\"],\ninput[type=\"submit\"] {\n  -webkit-appearance: button; /* 2 */\n  cursor: pointer; /* 3 */\n  @if $legacy_browser_support {\n    *overflow: visible;  /* 4 */\n  }\n}\n\n/**\n * Re-set default cursor for disabled elements.\n */\n\nbutton[disabled],\nhtml input[disabled] {\n  cursor: default;\n}\n\n/**\n * Remove inner padding and border in Firefox 4+.\n */\n\nbutton::-moz-focus-inner,\ninput::-moz-focus-inner {\n  border: 0;\n  padding: 0;\n}\n\n/**\n * Address Firefox 4+ setting `line-height` on `input` using `!important` in\n * the UA stylesheet.\n */\n\ninput {\n  line-height: normal;\n}\n\n/**\n * 1. Address box sizing set to `content-box` in IE 8/9/10.\n * 2. Remove excess padding in IE 8/9/10.\n *  Known issue: excess padding remains in IE 6.\n */\n\ninput[type=\"checkbox\"],\ninput[type=\"radio\"] {\n  box-sizing: border-box; /* 1 */\n  padding: 0; /* 2 */\n  @if $legacy_browser_support {\n    *height: 13px; /* 3 */\n    *width: 13px; /* 3 */\n  }\n}\n\n/**\n * Fix the cursor style for Chrome's increment/decrement buttons. For certain\n * `font-size` values of the `input`, it causes the cursor style of the\n * decrement button to change from `default` to `text`.\n */\n\ninput[type=\"number\"]::-webkit-inner-spin-button,\ninput[type=\"number\"]::-webkit-outer-spin-button {\n  height: auto;\n}\n\n/**\n * 1. Address `appearance` set to `searchfield` in Safari and Chrome.\n * 2. Address `box-sizing` set to `border-box` in Safari and Chrome.\n */\n\ninput[type=\"search\"] {\n  -webkit-appearance: textfield; /* 1 */\n  box-sizing: content-box; /* 2 */\n}\n\n/**\n * Remove inner padding and search cancel button in Safari and Chrome on OS X.\n * Safari (but not Chrome) clips the cancel button when the search input has\n * padding (and `textfield` appearance).\n */\n\ninput[type=\"search\"]::-webkit-search-cancel-button,\ninput[type=\"search\"]::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\n/**\n * Define consistent border, margin, and padding.\n */\n\nfieldset {\n  border: 1px solid #c0c0c0;\n  margin: 0 2px;\n  padding: 0.35em 0.625em 0.75em;\n}\n\n/**\n * 1. Correct `color` not being inherited in IE 8/9/10/11.\n * 2. Remove padding so people aren't caught out if they zero out fieldsets.\n * 3. Corrects text not wrapping in Firefox 3.\n * 4. Corrects alignment displayed oddly in IE 6/7.\n */\n\nlegend {\n  border: 0; /* 1 */\n  padding: 0; /* 2 */\n  @if $legacy_browser_support {\n    white-space: normal; /* 3 */\n    *margin-left: -7px; /* 4 */\n  }\n}\n\n/**\n * Remove default vertical scrollbar in IE 8/9/10/11.\n */\n\ntextarea {\n  overflow: auto;\n}\n\n/**\n * Don't inherit the `font-weight` (applied by a rule above).\n * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.\n */\n\noptgroup {\n  font-weight: bold;\n}\n\n/* Tables\n   ========================================================================== */\n\n/**\n * Remove most spacing between table cells.\n */\n\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n\ntd,\nth {\n  padding: 0;\n}","// link styles\n\na {\n  &:link,\n  &:visited,\n  &:active {\n    color: $color-text;\n  }\n\n  &:hover {\n    color: $color-primary;\n  }\n}\n","// colours styles\n\n%colour-item {\n  border-bottom: 12px solid rgba(0, 0, 0, 0.1);\n  height: 90px;\n}\n\n.colours-brand {\n  @include susy-clearfix;\n  .var {\n    display: block;\n    text-align: center;\n    @include mq($from: desktop) {\n      margin: 0.5em;\n    }\n  }\n  .colour-type {\n    @include gallery(4 of 8);\n    margin-bottom: 1em;\n    position: relative;\n    @include mq($from: desktop) {\n      @include gallery(3 of 12);\n    }\n    &:after {\n      position: absolute;\n      bottom: 0%;\n      left: 50%;\n      transform: translate(-50%, -50%);\n      color: rgba(0, 0, 0, 0.5);\n    }\n\n    &--primary {\n      background-color: $color-primary;\n      @extend %colour-item;\n      @extend .colour-type;\n      &:after {\n        content:  \"#{$color-primary}\";\n      }\n    }\n\n    &--accent {\n      background-color: $color-accent;\n      @extend %colour-item;\n      @extend .colour-type;\n      &:after {\n        content:  \"#{$color-accent}\";\n      }\n    }\n\n    &--body {\n      background-color: $color-text;\n      color: $white;\n      @extend %colour-item;\n      @extend .colour-type;\n      &:after {\n        content:  \"#{$color-text}\";\n        color: $white;\n      }\n    }\n\n    &--background {\n      background-color: $color-background;\n      @extend %colour-item;\n      @extend .colour-type;\n      &:after {\n        content:  \"#{$color-background}\";\n      }\n    }\n  }\n}\n\n.colours-standard {\n  @include susy-clearfix;\n  .var {\n    display: block;\n    text-align: center;\n    @include mq($from: desktop) {\n      margin: 0.5em;\n    }\n  }\n  .colour-type {\n    @include gallery(4 of 8);\n    margin-bottom: 1em;\n    position: relative;\n    @include mq($from: desktop) {\n      @include gallery(4 of 12);\n    }\n    &:after {\n      position: absolute;\n      bottom: 0%;\n      left: 50%;\n      transform: translate(-50%, -50%);\n      color: rgba(0, 0, 0, 0.5);\n    }\n\n    &--white {\n      background-color: $white;\n      @extend %colour-item;\n      @extend .colour-type;\n      &:after {\n        content:  \"#{$white}\";\n      }\n    }\n\n    &--black {\n      background-color: $black;\n      @extend %colour-item;\n      @extend .colour-type;\n      color: $white;\n      &:after {\n        content:  \"#{$black}\";\n        color: $white;\n      }\n    }\n\n    &--grey {\n      background-color: $grey;\n      @extend %colour-item;\n      @extend .colour-type;\n      &:after {\n        content:  \"#{$grey}\";\n      }\n    }\n\n    &--red {\n      background-color: $red;\n      @extend %colour-item;\n      @extend .colour-type;\n      &:after {\n        content:  \"#{$red}\";\n      }\n    }\n\n    &--green {\n      background-color: $green;\n      @extend %colour-item;\n      @extend .colour-type;\n      &:after {\n        content:  \"#{$green}\";\n      }\n    }\n    &--blue {\n      background-color: $blue;\n      @extend %colour-item;\n      @extend .colour-type;\n      &:after {\n        content:  \"#{$blue}\";\n      }\n    }\n  }\n}\n","// Susy Fallback Clearfix\n// ======================\n\n\n// Clearfix\n// --------\n// Check for an existing support mixin, or provide a simple fallback.\n@mixin susy-clearfix {\n  @if susy-support(clearfix, (mixin: clearfix)) {\n    @include clearfix;\n  } @else {\n    &:after {\n      content: \" \";\n      display: block;\n      clear: both;\n    }\n  }\n}\n","// rem Support\n// ===========\n\n// rem\n// ---\n// Check for an existing support mixin, or output directly.\n// - $prop  : <css property>\n// - $val   : <css value>\n@mixin susy-rem(\n  $prop,\n  $val\n) {\n  $_reqs: (\n    variable: rhythm-unit rem-with-px-fallback,\n    mixin: rem,\n  );\n  @if susy-support(rem, $_reqs, $warn: false) and $rhythm-unit == rem {\n    @include rem($prop, $val);\n  } @else {\n    #{$prop}: $val;\n  }\n}\n","// Span Syntax\n// ===========\n\n// Span [mixin]\n// ------------\n// Set a spanning element using shorthand syntax.\n// - $span  : <span>\n@mixin span(\n  $span\n) {\n  $inspect: $span;\n  $span: parse-span($span);\n  $output: span-math($span);\n  $nesting: susy-get(span, $span);\n  $clear: susy-get(clear, $span);\n\n  $box: susy-get(box-sizing, $span);\n  $content-box: if(susy-get(global-box-sizing) != 'border-box', true, false);\n  $box: $box or if(is-inside($span) and $content-box, border-box, null);\n\n  @if $clear == break {\n    @include break;\n  } @else if $clear == nobreak {\n    @include nobreak;\n  }\n\n  @include susy-inspect(span, $inspect);\n  @include output((box-sizing: $box));\n  @include float-span-output($output...);\n\n  @if valid-columns($nesting, silent) {\n    @include nested($span) { @content; }\n  } @else {\n    @content;\n  }\n}\n\n// Span [function]\n// ---------------\n// Return the width of a span.\n// - $span  : <span>\n@function span(\n  $span\n) {\n  @return get-span-width($span);\n}\n\n// Span Math\n// ---------\n// Get all the span results.\n// - $span: <map>\n@function span-math(\n  $span\n) {\n  $nest             : if(susy-get(role, $span) == nest, true, false);\n  $split-nest       : if(is-split($span) and $nest, true, false);\n  $edge             : get-edge($span);\n  $location         : get-location($span);\n\n  $float            : from;\n  $padding-before   : null;\n  $padding-after    : null;\n  $margin-before    : null;\n  $margin-after     : null;\n\n  // calculate widths\n  $spread: index(map-values($span), spread);\n  $span: if($split-nest and not($spread), map-merge($span, (spread: wide)), $span);\n  $width: get-span-width($span);\n  $gutters: get-gutters($span);\n\n  // apply gutters\n  @if is-inside($span) {\n    @if not(susy-get(role, $span)) {\n      $padding-before: map-get($gutters, before);\n      $padding-after: map-get($gutters, after);\n    }\n  } @else {\n    @if not($split-nest) {\n      $margin-before: map-get($gutters, before);\n      $margin-after: map-get($gutters, after);\n    }\n  }\n\n  // special margin handling\n  @if susy-get(output, $span) == isolate and $location {\n    $margin-before: get-isolation($span);\n    $margin-after: -100%;\n  } @else if $edge {\n    $is-split: is-split($span);\n    $pos: susy-get(gutter-position, $span);\n\n    @if $edge == last {\n      $float: susy-get(last-flow, $span);\n    }\n\n    @if not($is-split) {\n      @if $edge == full or ($edge == first and $pos == before) {\n        $margin-before: 0;\n      }\n      @if $edge == full or ($edge == last and $pos == after) {\n        $margin-after: 0;\n      }\n    }\n\n  }\n\n  @return (\n    width           : $width,\n    float           : $float,\n    margin-before   : $margin-before,\n    margin-after    : $margin-after,\n    padding-before  : $padding-before,\n    padding-after   : $padding-after,\n    flow            : susy-get(flow, $span),\n  );\n}\n\n// Get Span Width\n// --------------\n// Return span width.\n// - $span: <map>\n@function get-span-width(\n  $span\n) {\n  $span     : parse-span($span);\n\n  $n        : susy-get(span, $span);\n  $location : get-location($span);\n  $columns  : susy-get(columns, $span);\n  $gutters  : susy-get(gutters, $span);\n  $spread   : susy-get(spread, $span);\n\n  $context  : null;\n  $span-sum : null;\n  $width    : null;\n\n  @if $n == 'full' {\n    $pos: susy-get(gutter-position, $span);\n    $role: susy-get(role, $span);\n    $n: if($pos == split and $role != nest, susy-count($columns), 100%);\n  }\n\n  @if type-of($n) != number {\n    @warn \"(#{type-of($n)}) #{$n} is not a valid span.\";\n  } @else if unitless($n) {\n    $context: susy-sum($columns, $gutters, if(is-split($span), wide, narrow));\n    $spread: if(is-inside($span), $spread or wide, $spread);\n    $span-sum: susy($n, $location, $columns, $gutters, $spread);\n\n    $_math: susy-get(math, $span);\n    $_column-width: susy-get(column-width, $span);\n    @if $_math == static {\n      $width: $span-sum * valid-column-math($_math, $_column-width);\n    } @else {\n      $width: percentage($span-sum / $context);\n    }\n  } @else {\n    $width: $n;\n  }\n\n  @return $width;\n}\n","// Direction Helpers\n// =================\n\n// Susy Flow Defaults\n// ------------------\n// - PRIVATE\n@include susy-defaults((\n  flow: ltr,\n));\n\n// Get Direction\n// -------------\n// Return the 'from' or 'to' direction of a ltr or rtl flow.\n// - [$flow]  : ltr | rtl\n// - [$key]   : from | to\n@function get-direction(\n  $flow: map-get($susy-defaults, flow),\n  $key: from\n) {\n  $return: if($flow == rtl, (from: right, to: left), (from: left, to: right));\n  @return map-get($return, $key);\n}\n\n// To\n// --\n// Return the 'to' direction of a flow\n// - [$flow]  : ltr | rtl\n@function to(\n  $flow: map-get($susy-defaults, flow)\n) {\n  @return get-direction($flow, to);\n}\n\n// From\n// ----\n// Return the 'from' direction of a flow\n// - [$flow]  : ltr | rtl\n@function from(\n  $flow: map-get($susy-defaults, flow)\n) {\n  @return get-direction($flow, from);\n}\n","// Gallery Syntax\n// ==============\n\n// Gallery\n// -------\n// Create an isolated gallery\n// - $span        : <span>\n// - [$selector]  : child | of-type\n@mixin gallery(\n  $span,\n  $selector: child\n) {\n  $inspect    : $span;\n  $span       : parse-span($span);\n  $span       : map-merge($span, (location: 1));\n\n  $n            : susy-get(span, $span);\n  $columns      : susy-get(columns, $span);\n  $context      : susy-count($columns);\n  $flow         : susy-get(flow, $span);\n\n  $inside       : is-inside($span);\n  $from         : from($flow);\n  $line         : floor($context / $n);\n  $symmetrical  : is-symmetrical($columns);\n\n  $output: (\n    width             : null,\n    float             : from,\n    margin-before     : null,\n    margin-after      : null,\n    padding-before    : null,\n    padding-after     : null,\n    flow              : $flow,\n  );\n\n  @if $inside {\n    $gutters: get-gutters($span);\n    $output: map-merge($output, (\n      padding-before: map-get($gutters, before),\n      padding-after: map-get($gutters, after),\n    ));\n  }\n\n  @if $symmetrical {\n    $output: map-merge($output, (width: get-span-width($span)));\n  }\n\n  $box          : susy-get(box-sizing, $span);\n  $global-box   : if(susy-get(global-box-sizing) == 'border-box', true, false);\n\n  @include susy-inspect(gallery, $inspect);\n\n  // Collective Output\n  @if $box == border-box or ($inside and not($box) and not($global-box)) {\n    @include output((box-sizing: border-box));\n  } @else if $box == content-box {\n    @include output((box-sizing: content-box));\n  }\n\n  @include float-span-output($output...);\n\n  // Individual Loop\n  @for $item from 1 through $line {\n    $nth: '#{$line}n + #{$item}';\n    &:nth-#{$selector}(#{$nth}) {\n      // Individual Prep\n      $output: (\n        width             : if($symmetrical, null, get-span-width($span)),\n        float             : null,\n        margin-before     : get-isolation($span),\n        margin-after      : -100%,\n        padding-before    : null,\n        padding-after     : null,\n        flow              : $flow,\n      );\n\n      // Individual Output\n      @include float-span-output($output...);\n\n      @if get-edge($span) == first {\n        @include break;\n        @include first($span);\n      } @else {\n        @include nobreak;\n      }\n\n      // Individual Location Increment\n      $location: get-location($span) + $n;\n      $location: if($location > $context, 1, $location);\n      $span: map-merge($span, (location: $location));\n    }\n  }\n}\n","// Row Start & End\n// ===============\n\n// Break\n// -----\n// Apply to any element that should force a line break.\n@mixin break {\n  @include output((clear: both));\n}\n\n\n// NoBreak\n// -------\n// Cancel the break() effect, e.g. when using media queries.\n@mixin nobreak {\n  @include output((clear: none));\n}\n\n\n// Full\n// ----\n// - [$context]: <layout shorthand>\n@mixin full(\n  $context: $susy\n) {\n  $inspect : $context;\n  @include susy-inspect(full, $inspect);\n  @include span(full of parse-grid($context) break);\n}\n\n\n// First\n// -----\n// - [$context]: <settings>\n@mixin first(\n  $context: $susy\n) {\n  $inspect  : $context;\n  $context  : parse-grid($context);\n  $flow     : susy-get(flow, $context);\n\n  @include susy-inspect(first, $inspect);\n  @if not(is-split($context)) {\n    @include float-first($flow);\n  }\n}\n\n@mixin alpha(\n  $context: $susy\n) {\n  @include first($context);\n}\n\n\n// Last\n// ----\n// - [$context]: <settings>\n@mixin last(\n  $context: $susy\n) {\n  $inspect  : $context;\n  $context  : parse-grid($context);\n\n  @include susy-inspect(last, $inspect);\n\n  $output: (\n    flow: susy-get(flow, $context),\n    last-flow: susy-get(last-flow, $context),\n    margin: if(is-split($context), null, 0),\n  );\n\n  @include float-last($output...);\n}\n\n@mixin omega(\n  $context: $susy\n) {\n  @include last($context);\n}\n\n\n// Get Edge\n// --------\n// Calculate edge value based on location, if possible\n@function get-edge(\n  $span\n) {\n  $span       : parse-span($span);\n  $edge       : susy-get(edge, $span);\n\n  @if not($edge) {\n    $count: susy-count(susy-get(columns, $span));\n    $location: susy-get(location, $span);\n    $n: susy-get(span, $span);\n\n    $number: if(type-of($location) == number, true, false);\n    $index: if($number and unitless($location), true, false);\n\n    @if $n == $count {\n      $edge: full;\n    } @else if $location and $n and $index {\n      @if $location == 1 {\n        $edge: if($n == $count, full, first);\n      } @else if $location + $n - 1 == $count {\n        $edge: last;\n      }\n    }\n  }\n\n  @if $edge == alpha or $edge == omega {\n    $edge: if($edge == alpha, first, last);\n  }\n\n  @return $edge;\n}\n\n\n// Get Location\n// ------------\n// Calculate location value based on edge, if possible\n@function get-location(\n  $span\n) {\n  $span       : parse-span($span);\n  $location   : susy-get(location, $span);\n  $edge       : get-edge($span);\n  $n          : susy-get(span, $span);\n\n  @if $edge and not($location) and type-of($n) == number and unitless($n) {\n    @if $edge == first {\n      $location: 1;\n    } @else if $edge == last {\n      $location: susy-count(susy-get(columns, $span)) - $n + 1;\n    }\n  }\n\n  @return $location\n}\n","// Float Ends API\n// ==============\n\n// Susy End Defaults\n// -----------------\n// - PRIVATE\n@include susy-defaults((\n  last-flow: to,\n));\n\n// Float Last\n// ----------\n// - [$flow]  : ltr | rtl\n@mixin float-last(\n  $flow: map-get($susy-defaults, flow),\n  $last-flow: map-get($susy-defaults, last-flow),\n  $margin: 0\n) {\n  $to: to($flow);\n\n  $output: (\n    float: if($last-flow == to, $to, null),\n    margin-#{$to}: $margin,\n  );\n\n  @include output($output);\n}\n\n// Float First\n// -----------\n// - [$flow]  : ltr | rtl\n@mixin float-first(\n  $flow: map-get($susy-defaults, flow)\n) {\n  $output: (\n    margin-#{from($flow)}: 0,\n  );\n\n  @include output($output);\n}\n","// typography styles\n\n.typography {\n  .serif {\n    font-family: $font-family-serif;\n  }\n\n  .sans-serif {\n    font-family: $font-family-sans-serif;\n  }\n}\n","// Container Syntax\n// ================\n\n// Container [mixin]\n// -----------------\n// Set a container element\n// - [$layout]  : <settings>\n@mixin container(\n  $layout: $susy\n) {\n  $inspect    : $layout;\n  $layout     : parse-grid($layout);\n\n  $_width     : get-container-width($layout);\n  $_justify   : parse-container-position(susy-get(container-position, $layout));\n  $_property  : if(susy-get(math, $layout) == static, width, max-width);\n\n  $_box       : susy-get(box-sizing, $layout);\n\n  @if $_box {\n    @include output((box-sizing: $_box));\n  }\n\n  @include susy-inspect(container, $inspect);\n  @include float-container($_width, $_justify, $_property);\n  @include show-grid($layout);\n}\n\n// Container [function]\n// --------------------\n// Return container width\n// - [$layout]  : <settings>\n@function container(\n  $layout: $susy\n) {\n  $layout: parse-grid($layout);\n  @return get-container-width($layout);\n}\n\n// Get Container Width\n// -------------------\n// Calculate the container width\n// - [$layout]: <settings>\n@function get-container-width(\n  $layout: $susy\n) {\n  $layout         : parse-grid($layout);\n  $_width         : susy-get(container, $layout);\n  $_column-width  : susy-get(column-width, $layout);\n  $_math          : susy-get(math, $layout);\n\n  @if not($_width) or $_width == auto {\n    @if valid-column-math($_math, $_column-width) {\n      $_columns   : susy-get(columns, $layout);\n      $_gutters   : susy-get(gutters, $layout);\n      $_spread    : if(is-split($layout), wide, narrow);\n      $_width     : susy-sum($_columns, $_gutters, $_spread) * $_column-width;\n    } @else {\n      $_width: 100%;\n    }\n  }\n\n  @return $_width;\n}\n\n// Parse Container Position\n// ------------------------\n// Parse the $container-position into margin values.\n// - [$justify]   : left | center | right | <length> [<length>]\n@function parse-container-position(\n  $justify: map-get($susy-defaults, container-position)\n) {\n  $_return: if($justify == left, 0, auto) if($justify == right, 0, auto);\n\n  @if not(index(left right center, $justify)) {\n    $_return: nth($justify, 1);\n    $_return: $_return if(length($justify) > 1, nth($justify, 2), $_return);\n  }\n\n  @return $_return;\n}\n"],"sourceRoot":"/source/"}